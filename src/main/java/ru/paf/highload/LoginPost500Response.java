/**
 * OTUS Highload Architect
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ru.paf.highload;

import java.util.Objects;
import java.util.Arrays;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;


public class LoginPost500Response  {
  
 /**
  * Описание ошибки
  */
  @JsonbProperty("message")
  private String message;

 /**
  * Идентификатор запроса. Предназначен для более быстрого поиска проблем.
  */
  @JsonbProperty("request_id")
  private String requestId;

 /**
  * Код ошибки. Предназначен для классификации проблем и более быстрого решения проблем.
  */
  @JsonbProperty("code")
  private Integer code;

  /**
   * Описание ошибки
   * @return message
   **/
  public String getMessage() {
    return message;
  }

  /**
   * Set message
   */
  public void setMessage(String message) {
    this.message = message;
  }

  public LoginPost500Response message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Идентификатор запроса. Предназначен для более быстрого поиска проблем.
   * @return requestId
   **/
  public String getRequestId() {
    return requestId;
  }

  /**
   * Set requestId
   */
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public LoginPost500Response requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Код ошибки. Предназначен для классификации проблем и более быстрого решения проблем.
   * @return code
   **/
  public Integer getCode() {
    return code;
  }

  /**
   * Set code
   */
  public void setCode(Integer code) {
    this.code = code;
  }

  public LoginPost500Response code(Integer code) {
    this.code = code;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginPost500Response loginPost500Response = (LoginPost500Response) o;
    return Objects.equals(this.message, loginPost500Response.message) &&
        Objects.equals(this.requestId, loginPost500Response.requestId) &&
        Objects.equals(this.code, loginPost500Response.code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, requestId, code);
  }

  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginPost500Response {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

