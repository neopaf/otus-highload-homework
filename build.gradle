/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'org.eclipse.microprofile.rest.client:microprofile-rest-client-api:2.0'
    api 'org.apache.cxf:cxf-rt-rs-extension-providers:3.2.6'
    api 'jakarta.json.bind:jakarta.json.bind-api:1.0.2'
    api 'jakarta.json:jakarta.json-api:1.1.6'
    api 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'
    api 'com.sun.xml.bind:jaxb-core:2.2.11'
    api 'com.sun.xml.bind:jaxb-impl:2.2.11'
    api 'jakarta.activation:jakarta.activation-api:1.2.2'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'io.smallrye:smallrye-rest-client:1.2.1'
    testImplementation 'io.smallrye:smallrye-config:1.3.5'
    compileOnly 'jakarta.ws.rs:jakarta.ws.rs-api:2.1.6'
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
}

group = 'org.openapitools'
version = '1.2.0'
description = 'openapi-microprofile-server'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
